/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.RestaurantRole;

import business.Business;
import business.Customer.CustomerDirectory;
import business.Order.Order;
import business.Order.OrderDirectory;
import business.Restaurant.Menu;
import business.Restaurant.Restaurant;
import business.Restaurant.RestaurantDirectory;
import business.useraccount.UserAccount;
import java.awt.Component;
import java.awt.Font;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author deepv
 */
public class RestaurantAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RestaurantAreaJPanel
     */
    Business business;
    RestaurantDirectory restaurantDirectory;
    UserAccount account;
    Restaurant restaurant;
    String managerName;
    CustomerDirectory customerDirectory;
    OrderDirectory orderDirectory;
    int orderId;

    public RestaurantAreaJPanel(JPanel userProcessContainer, UserAccount account, Business business, RestaurantDirectory restaurantDirectory, CustomerDirectory customerDirectory, OrderDirectory orderDirectory) {
        initComponents();
        this.business = business;
        this.restaurantDirectory = restaurantDirectory;
        this.account = account;
        this.orderDirectory = orderDirectory;
        managerName = account.getEmployee().getName();
        restaurant = restaurantDirectory.findRestaurant(managerName);
        lblRestaurantName.setText(restaurant.getName() == null ? managerName + "'s Dashboard" : restaurant.getName());
        this.customerDirectory = customerDirectory;

        JTableHeader tableHeader = tblOrders.getTableHeader();
        tableHeader.setFont(new Font("Segoe UI", Font.BOLD, 12));
        ((DefaultTableCellRenderer) tableHeader.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        JTableHeader tableHeader1 = tblFeedBack.getTableHeader();
        tableHeader1.setFont(new Font("Segoe UI", Font.BOLD, 12));
        ((DefaultTableCellRenderer) tableHeader1.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        JTableHeader tableHeader2 = tblFoodList.getTableHeader();
        tableHeader2.setFont(new Font("Segoe UI", Font.BOLD, 12));
        ((DefaultTableCellRenderer) tableHeader2.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        if (orderDirectory != null) {
            populateOrders();
        }

        pnlFeedbackTable.setVisible(false);
        btnClose.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jLabel5 = new javax.swing.JLabel();
        jSplitPane1 = new javax.swing.JSplitPane();
        NavigationJPanel = new javax.swing.JPanel();
        btnMenu = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnEditDetails = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        workAreaPanel = new javax.swing.JPanel();
        lblRestaurantName = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        btnAcceptOrder = new javax.swing.JButton();
        btnrejectOrder = new javax.swing.JButton();
        btnFeedback = new javax.swing.JButton();
        pnlFeedbackTable = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblFeedBack = new javax.swing.JTable();
        btnClose = new javax.swing.JButton();
        btnDetails = new javax.swing.JButton();
        EditDetailsPanel = new javax.swing.JPanel();
        lblHeader = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblCuisine = new javax.swing.JLabel();
        txtCuisine = new javax.swing.JTextField();
        lblVeg = new javax.swing.JLabel();
        chkVeg = new javax.swing.JCheckBox();
        lblNonVeg = new javax.swing.JLabel();
        chkNonVeg = new javax.swing.JCheckBox();
        lblVegan = new javax.swing.JLabel();
        chkVegan = new javax.swing.JCheckBox();
        lvlAll = new javax.swing.JLabel();
        chkAll = new javax.swing.JCheckBox();
        btnSave = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblPhoneNum = new javax.swing.JLabel();
        txtPhoneNum = new javax.swing.JTextField();
        lblEmailId = new javax.swing.JLabel();
        txtEmailId = new javax.swing.JTextField();
        MenuPanel1 = new javax.swing.JPanel();
        lblHeader2 = new javax.swing.JLabel();
        btnBack3 = new javax.swing.JButton();
        btnBack4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        lblApetizers1 = new javax.swing.JLabel();
        lblAptVeg1 = new javax.swing.JLabel();
        lblAptNonVeg1 = new javax.swing.JLabel();
        lblAptVegan1 = new javax.swing.JLabel();
        rdOnionRings1 = new javax.swing.JRadioButton();
        txtOnionRings = new javax.swing.JTextField();
        rdSpinachPie1 = new javax.swing.JRadioButton();
        txtSpinachPie = new javax.swing.JTextField();
        rdSpringRoles1 = new javax.swing.JRadioButton();
        txtSpringRoles = new javax.swing.JTextField();
        rdMeatBalls1 = new javax.swing.JRadioButton();
        txtMeatBalls = new javax.swing.JTextField();
        rdSausageDip1 = new javax.swing.JRadioButton();
        txtSausageDip = new javax.swing.JTextField();
        rdFriedShrimp1 = new javax.swing.JRadioButton();
        txtFriedShrimp = new javax.swing.JTextField();
        rdWhiteBeanDip1 = new javax.swing.JRadioButton();
        txtWhiteBeanDip = new javax.swing.JTextField();
        rdTortillaChips1 = new javax.swing.JRadioButton();
        txtTortillaChips = new javax.swing.JTextField();
        rdCrispyTofu1 = new javax.swing.JRadioButton();
        txtCrispyTofu = new javax.swing.JTextField();
        lblMains1 = new javax.swing.JLabel();
        lblMainsVeg1 = new javax.swing.JLabel();
        lblMainsNonVeg1 = new javax.swing.JLabel();
        lblAptVegan2 = new javax.swing.JLabel();
        rdCheeseBurger1 = new javax.swing.JRadioButton();
        txtCheeseBurger = new javax.swing.JTextField();
        rdFriedRice1 = new javax.swing.JRadioButton();
        txtFriedRice = new javax.swing.JTextField();
        rdVeggiePizza1 = new javax.swing.JRadioButton();
        txtVeggiePizza = new javax.swing.JTextField();
        rdHamBurger1 = new javax.swing.JRadioButton();
        rdFishNChips1 = new javax.swing.JRadioButton();
        rdPrawnFriedRice1 = new javax.swing.JRadioButton();
        txtHamBurger = new javax.swing.JTextField();
        txtFishNChips = new javax.swing.JTextField();
        txtPrawnFriedRice = new javax.swing.JTextField();
        rdTofuSalad1 = new javax.swing.JRadioButton();
        txtTofuSalad = new javax.swing.JTextField();
        rdFalafelBowl1 = new javax.swing.JRadioButton();
        txtFalafelBowl = new javax.swing.JTextField();
        rdTofuAndRiceBowl1 = new javax.swing.JRadioButton();
        txtTofuAndRiceBowl = new javax.swing.JTextField();
        lblDesserts1 = new javax.swing.JLabel();
        rdBlackForestCake1 = new javax.swing.JRadioButton();
        txtBlackForestCake = new javax.swing.JTextField();
        rdPineappleSwissRole1 = new javax.swing.JRadioButton();
        txtPineappleSwissRole = new javax.swing.JTextField();
        rdChocolateMousse1 = new javax.swing.JRadioButton();
        txtChocolateMousse = new javax.swing.JTextField();
        lbBeverages1 = new javax.swing.JLabel();
        rdCocaCola1 = new javax.swing.JRadioButton();
        txtCocaCola = new javax.swing.JTextField();
        rdFreshLimesalted1 = new javax.swing.JRadioButton();
        txtFreshLimeSalted = new javax.swing.JTextField();
        rdPepsi1 = new javax.swing.JRadioButton();
        txtPepsi = new javax.swing.JTextField();
        OrderDetails = new javax.swing.JPanel();
        lblHeader3 = new javax.swing.JLabel();
        btnBack5 = new javax.swing.JButton();
        lblOrderedBy = new javax.swing.JLabel();
        lblOrderedAt = new javax.swing.JLabel();
        lblOrderedByValue = new javax.swing.JLabel();
        lblOrderedAtValue = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblFoodList = new javax.swing.JTable();

        jScrollPane2.setViewportView(jEditorPane1);

        jLabel5.setText("jLabel5");

        NavigationJPanel.setBackground(new java.awt.Color(255, 255, 255));

        btnMenu.setBackground(new java.awt.Color(206, 217, 217));
        btnMenu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnMenu.setForeground(new java.awt.Color(0, 51, 51));
        btnMenu.setText("MENU");
        btnMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(206, 217, 217));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 51, 51));
        jButton2.setText("VIEW DELIVERY STAFF");

        btnEditDetails.setBackground(new java.awt.Color(206, 217, 217));
        btnEditDetails.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEditDetails.setForeground(new java.awt.Color(0, 51, 51));
        btnEditDetails.setText("EDIT DETAILS");
        btnEditDetails.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NavigationJPanelLayout = new javax.swing.GroupLayout(NavigationJPanel);
        NavigationJPanel.setLayout(NavigationJPanelLayout);
        NavigationJPanelLayout.setHorizontalGroup(
            NavigationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavigationJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NavigationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(NavigationJPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(NavigationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnMenu, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(btnEditDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        NavigationJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnMenu, jButton2});

        NavigationJPanelLayout.setVerticalGroup(
            NavigationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavigationJPanelLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(btnEditDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96)
                .addComponent(btnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jButton2)
                .addContainerGap(463, Short.MAX_VALUE))
        );

        NavigationJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnMenu, jButton2});

        jSplitPane1.setLeftComponent(NavigationJPanel);

        jLayeredPane1.setLayout(new java.awt.CardLayout());

        workAreaPanel.setBackground(new java.awt.Color(255, 255, 255));

        lblRestaurantName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblRestaurantName.setForeground(new java.awt.Color(0, 153, 153));
        lblRestaurantName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRestaurantName.setText("<restaurant name>");

        tblOrders.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "CUSTOMER", "BILL AMOUNT", "ORDER TIME", "STATUS"
            }
        ));
        tblOrders.setSelectionBackground(new java.awt.Color(153, 209, 232));
        tblOrders.setSelectionForeground(new java.awt.Color(0, 51, 51));
        jScrollPane3.setViewportView(tblOrders);

        btnAcceptOrder.setBackground(new java.awt.Color(204, 255, 204));
        btnAcceptOrder.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAcceptOrder.setForeground(new java.awt.Color(0, 102, 51));
        btnAcceptOrder.setText("ACCEPT ORDER");
        btnAcceptOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptOrderActionPerformed(evt);
            }
        });

        btnrejectOrder.setBackground(new java.awt.Color(255, 204, 204));
        btnrejectOrder.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnrejectOrder.setForeground(new java.awt.Color(204, 0, 0));
        btnrejectOrder.setText("REJECT ORDER");
        btnrejectOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrejectOrderActionPerformed(evt);
            }
        });

        btnFeedback.setBackground(new java.awt.Color(255, 255, 255));
        btnFeedback.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnFeedback.setForeground(new java.awt.Color(0, 102, 102));
        btnFeedback.setText("VIEW FEEDBACK");
        btnFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFeedbackActionPerformed(evt);
            }
        });

        pnlFeedbackTable.setBackground(new java.awt.Color(240, 255, 255));

        tblFeedBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblFeedBack.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "FEEDBACK"
            }
        ));
        tblFeedBack.setSelectionBackground(new java.awt.Color(153, 209, 232));
        tblFeedBack.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane4.setViewportView(tblFeedBack);

        javax.swing.GroupLayout pnlFeedbackTableLayout = new javax.swing.GroupLayout(pnlFeedbackTable);
        pnlFeedbackTable.setLayout(pnlFeedbackTableLayout);
        pnlFeedbackTableLayout.setHorizontalGroup(
            pnlFeedbackTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFeedbackTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        pnlFeedbackTableLayout.setVerticalGroup(
            pnlFeedbackTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFeedbackTableLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnClose.setBackground(new java.awt.Color(255, 204, 204));
        btnClose.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnClose.setForeground(new java.awt.Color(204, 0, 0));
        btnClose.setText("X");
        btnClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnDetails.setBackground(new java.awt.Color(255, 255, 255));
        btnDetails.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDetails.setForeground(new java.awt.Color(0, 153, 51));
        btnDetails.setText("DETAILS");
        btnDetails.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout workAreaPanelLayout = new javax.swing.GroupLayout(workAreaPanel);
        workAreaPanel.setLayout(workAreaPanelLayout);
        workAreaPanelLayout.setHorizontalGroup(
            workAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblRestaurantName, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
            .addGroup(workAreaPanelLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(workAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(workAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnClose)
                        .addGroup(workAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                            .addComponent(pnlFeedbackTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(workAreaPanelLayout.createSequentialGroup()
                        .addComponent(btnAcceptOrder)
                        .addGap(18, 18, 18)
                        .addComponent(btnrejectOrder)
                        .addGap(18, 18, 18)
                        .addComponent(btnFeedback)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDetails)))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        workAreaPanelLayout.setVerticalGroup(
            workAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workAreaPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblRestaurantName)
                .addGap(62, 62, 62)
                .addGroup(workAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAcceptOrder)
                    .addComponent(btnrejectOrder)
                    .addComponent(btnFeedback)
                    .addComponent(btnDetails))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btnClose)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlFeedbackTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(236, Short.MAX_VALUE))
        );

        jLayeredPane1.add(workAreaPanel, "card2");

        EditDetailsPanel.setBackground(new java.awt.Color(240, 255, 255));

        lblHeader.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblHeader.setForeground(new java.awt.Color(0, 153, 153));
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("Edit Restaurant Details");

        lblName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblName.setForeground(new java.awt.Color(0, 51, 51));
        lblName.setText("NAME : ");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        lblAddress.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAddress.setForeground(new java.awt.Color(0, 51, 51));
        lblAddress.setText("ADDRESS : ");

        lblCuisine.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblCuisine.setForeground(new java.awt.Color(0, 51, 51));
        lblCuisine.setText("CUISINE : ");

        lblVeg.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblVeg.setForeground(new java.awt.Color(0, 51, 51));
        lblVeg.setText("VEG : ");

        chkVeg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkVegActionPerformed(evt);
            }
        });

        lblNonVeg.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblNonVeg.setForeground(new java.awt.Color(0, 51, 51));
        lblNonVeg.setText("NON-VEG : ");

        chkNonVeg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkNonVegActionPerformed(evt);
            }
        });

        lblVegan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblVegan.setForeground(new java.awt.Color(0, 51, 51));
        lblVegan.setText("VEGAN : ");

        chkVegan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkVeganActionPerformed(evt);
            }
        });

        lvlAll.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lvlAll.setForeground(new java.awt.Color(0, 51, 51));
        lvlAll.setText("ALL :");

        chkAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAllActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(215, 254, 211));
        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(72, 151, 64));
        btnSave.setText("SAVE CHANGES");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(255, 204, 204));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 0, 51));
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblPhoneNum.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPhoneNum.setForeground(new java.awt.Color(0, 51, 51));
        lblPhoneNum.setText("PHONE NO. : ");

        lblEmailId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblEmailId.setForeground(new java.awt.Color(0, 51, 51));
        lblEmailId.setText("EMAIL ID : ");

        javax.swing.GroupLayout EditDetailsPanelLayout = new javax.swing.GroupLayout(EditDetailsPanel);
        EditDetailsPanel.setLayout(EditDetailsPanelLayout);
        EditDetailsPanelLayout.setHorizontalGroup(
            EditDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditDetailsPanelLayout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addGroup(EditDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditDetailsPanelLayout.createSequentialGroup()
                        .addGroup(EditDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(EditDetailsPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EditDetailsPanelLayout.createSequentialGroup()
                                .addGroup(EditDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EditDetailsPanelLayout.createSequentialGroup()
                                        .addGroup(EditDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(EditDetailsPanelLayout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(lblEmailId))
                                            .addGroup(EditDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(lblPhoneNum)
                                                .addComponent(lblName)
                                                .addComponent(lblAddress)
                                                .addComponent(lblCuisine)
                                                .addComponent(lblVeg)
                                                .addComponent(lblNonVeg)
                                                .addComponent(lblVegan)
                                                .addComponent(lvlAll)))
                                        .addGap(18, 18, 18)
                                        .addGroup(EditDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                            .addComponent(txtName)
                                            .addComponent(txtAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                                            .addComponent(txtCuisine)
                                            .addComponent(txtPhoneNum)
                                            .addComponent(txtEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EditDetailsPanelLayout.createSequentialGroup()
                                        .addGap(93, 93, 93)
                                        .addGroup(EditDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(chkAll, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(chkVegan, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(chkNonVeg, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(chkVeg, javax.swing.GroupLayout.Alignment.LEADING))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(245, 245, 245))
                    .addGroup(EditDetailsPanelLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(lblHeader)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack)
                        .addGap(24, 24, 24))))
        );

        EditDetailsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtAddress, txtCuisine, txtEmailId, txtName, txtPhoneNum});

        EditDetailsPanelLayout.setVerticalGroup(
            EditDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditDetailsPanelLayout.createSequentialGroup()
                .addGroup(EditDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditDetailsPanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(lblHeader))
                    .addGroup(EditDetailsPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btnBack)))
                .addGap(97, 97, 97)
                .addGroup(EditDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EditDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddress)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EditDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCuisine)
                    .addComponent(txtCuisine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EditDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNum)
                    .addComponent(txtPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EditDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmailId)
                    .addComponent(txtEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(EditDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVeg)
                    .addComponent(chkVeg))
                .addGap(18, 18, 18)
                .addGroup(EditDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNonVeg)
                    .addComponent(chkNonVeg))
                .addGap(18, 18, 18)
                .addGroup(EditDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVegan)
                    .addComponent(chkVegan))
                .addGap(18, 18, 18)
                .addGroup(EditDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lvlAll)
                    .addComponent(chkAll))
                .addGap(31, 31, 31)
                .addComponent(btnSave)
                .addGap(76, 76, 76))
        );

        jLayeredPane1.add(EditDetailsPanel, "card3");

        MenuPanel1.setBackground(new java.awt.Color(240, 255, 255));

        lblHeader2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblHeader2.setForeground(new java.awt.Color(0, 153, 153));
        lblHeader2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader2.setText("MENU");

        btnBack3.setBackground(new java.awt.Color(255, 204, 204));
        btnBack3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack3.setForeground(new java.awt.Color(255, 0, 51));
        btnBack3.setText("BACK");
        btnBack3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack3ActionPerformed(evt);
            }
        });

        btnBack4.setBackground(new java.awt.Color(215, 254, 211));
        btnBack4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack4.setForeground(new java.awt.Color(72, 151, 64));
        btnBack4.setText("SAVE");
        btnBack4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack4ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(240, 255, 255));

        lblApetizers1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblApetizers1.setForeground(new java.awt.Color(0, 204, 204));
        lblApetizers1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblApetizers1.setText("APPETIZERS");

        lblAptVeg1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAptVeg1.setForeground(new java.awt.Color(0, 102, 102));
        lblAptVeg1.setText("VEG");

        lblAptNonVeg1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAptNonVeg1.setForeground(new java.awt.Color(0, 102, 102));
        lblAptNonVeg1.setText("NON-VEG");

        lblAptVegan1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAptVegan1.setForeground(new java.awt.Color(0, 102, 102));
        lblAptVegan1.setText("VEGAN");

        rdOnionRings1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdOnionRings1.setText("Onion Rings");
        rdOnionRings1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdOnionRings1ActionPerformed(evt);
            }
        });

        rdSpinachPie1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdSpinachPie1.setText("Spinach Pie");

        rdSpringRoles1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdSpringRoles1.setText("Spring Roles");

        rdMeatBalls1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdMeatBalls1.setText("Meatballs");

        rdSausageDip1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdSausageDip1.setText("Sausage Dip");

        rdFriedShrimp1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdFriedShrimp1.setText("Fired Shrimp");

        rdWhiteBeanDip1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdWhiteBeanDip1.setText("White Bean Dip");

        rdTortillaChips1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdTortillaChips1.setText("Tortilla Chips");

        rdCrispyTofu1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdCrispyTofu1.setText("Crispy Tofu");

        lblMains1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMains1.setForeground(new java.awt.Color(0, 204, 204));
        lblMains1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMains1.setText("MAINS");

        lblMainsVeg1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMainsVeg1.setForeground(new java.awt.Color(0, 102, 102));
        lblMainsVeg1.setText("VEG");

        lblMainsNonVeg1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMainsNonVeg1.setForeground(new java.awt.Color(0, 102, 102));
        lblMainsNonVeg1.setText("NON-VEG");

        lblAptVegan2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAptVegan2.setForeground(new java.awt.Color(0, 102, 102));
        lblAptVegan2.setText("VEGAN");

        rdCheeseBurger1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdCheeseBurger1.setText("Cheese Burger");
        rdCheeseBurger1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdCheeseBurger1ActionPerformed(evt);
            }
        });

        rdFriedRice1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdFriedRice1.setText("Fried Rice");

        rdVeggiePizza1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdVeggiePizza1.setText("Veggie Pizza");

        rdHamBurger1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdHamBurger1.setText("Ham Burger");

        rdFishNChips1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdFishNChips1.setText("Fish N' Chips");

        rdPrawnFriedRice1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdPrawnFriedRice1.setText("Prawn Fried Rice");

        rdTofuSalad1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdTofuSalad1.setText("Tofu Salad");

        txtTofuSalad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTofuSaladActionPerformed(evt);
            }
        });

        rdFalafelBowl1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdFalafelBowl1.setText("Falafel Bowl");

        rdTofuAndRiceBowl1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdTofuAndRiceBowl1.setText("Tofu & Rice platter");

        lblDesserts1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDesserts1.setForeground(new java.awt.Color(0, 204, 204));
        lblDesserts1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDesserts1.setText("DESSERTS");

        rdBlackForestCake1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdBlackForestCake1.setText("Black Forest Cake");

        rdPineappleSwissRole1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdPineappleSwissRole1.setText("Pineapple Swiss Role");

        rdChocolateMousse1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdChocolateMousse1.setText("Chocolate Mousse with Whipped Cream");

        lbBeverages1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbBeverages1.setForeground(new java.awt.Color(0, 204, 204));
        lbBeverages1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbBeverages1.setText("BEVERAGES");

        rdCocaCola1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdCocaCola1.setText("CocaCola");

        rdFreshLimesalted1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdFreshLimesalted1.setText("Fresh Lime Salted");

        rdPepsi1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdPepsi1.setText("Pepsi");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(lblAptVeg1)
                .addGap(188, 188, 188)
                .addComponent(lblAptNonVeg1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblAptVegan1)
                .addGap(125, 125, 125))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(298, 298, 298)
                        .addComponent(lblApetizers1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdOnionRings1)
                                    .addComponent(rdSpinachPie1)
                                    .addComponent(rdSpringRoles1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtOnionRings, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSpinachPie, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSpringRoles, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(90, 90, 90)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(rdSausageDip1)
                                                    .addComponent(rdMeatBalls1))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtSausageDip, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtMeatBalls, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblMains1)
                                                    .addComponent(rdFriedShrimp1))
                                                .addGap(18, 18, 18)
                                                .addComponent(txtFriedShrimp, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(65, 65, 65)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(rdWhiteBeanDip1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtWhiteBeanDip, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(rdTortillaChips1)
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(lblAptVegan2)
                                                        .addComponent(rdCrispyTofu1)))
                                                .addGap(19, 19, 19)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtCrispyTofu, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtTortillaChips, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(rdTofuAndRiceBowl1)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(1, 1, 1)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(rdTofuSalad1)
                                                            .addComponent(rdFalafelBowl1))))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtFalafelBowl, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtTofuAndRiceBowl, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtTofuSalad, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rdPrawnFriedRice1)
                                            .addComponent(rdHamBurger1)
                                            .addComponent(rdFishNChips1))
                                        .addGap(14, 14, 14)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                            .addComponent(txtPrawnFriedRice, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtHamBurger, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtFishNChips, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdCheeseBurger1)
                                    .addComponent(rdFriedRice1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFriedRice, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCheeseBurger, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rdVeggiePizza1)
                                .addGap(18, 18, 18)
                                .addComponent(txtVeggiePizza, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDesserts1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(rdBlackForestCake1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtBlackForestCake, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(rdPineappleSwissRole1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtPineappleSwissRole, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(rdChocolateMousse1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtChocolateMousse, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(rdPepsi1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtPepsi, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(rdCocaCola1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtCocaCola, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(rdFreshLimesalted1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtFreshLimeSalted, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(lbBeverages1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(lblMainsVeg1)
                        .addGap(189, 189, 189)
                        .addComponent(lblMainsNonVeg1)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblApetizers1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAptVeg1)
                    .addComponent(lblAptNonVeg1)
                    .addComponent(lblAptVegan1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdOnionRings1)
                            .addComponent(txtOnionRings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdSpinachPie1)
                            .addComponent(txtSpinachPie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdSpringRoles1)
                            .addComponent(txtSpringRoles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rdMeatBalls1)
                            .addComponent(txtMeatBalls, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSausageDip, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdSausageDip1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdFriedShrimp1)
                            .addComponent(txtFriedShrimp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdWhiteBeanDip1)
                            .addComponent(txtWhiteBeanDip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdTortillaChips1)
                            .addComponent(txtTortillaChips, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdCrispyTofu1)
                            .addComponent(txtCrispyTofu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(56, 56, 56)
                .addComponent(lblMains1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMainsVeg1)
                    .addComponent(lblMainsNonVeg1)
                    .addComponent(lblAptVegan2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdCheeseBurger1)
                            .addComponent(txtCheeseBurger, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdFriedRice1)
                            .addComponent(txtFriedRice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdVeggiePizza1)
                            .addComponent(txtVeggiePizza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdHamBurger1)
                            .addComponent(txtHamBurger, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdFishNChips1)
                            .addComponent(txtFishNChips, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdPrawnFriedRice1)
                            .addComponent(txtPrawnFriedRice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rdTofuSalad1)
                            .addComponent(txtTofuSalad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdFalafelBowl1)
                            .addComponent(txtFalafelBowl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdTofuAndRiceBowl1)
                            .addComponent(txtTofuAndRiceBowl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblDesserts1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBlackForestCake, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdBlackForestCake1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPineappleSwissRole, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdPineappleSwissRole1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdChocolateMousse1)
                            .addComponent(txtChocolateMousse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbBeverages1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdCocaCola1)
                            .addComponent(txtCocaCola, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdFreshLimesalted1)
                            .addComponent(txtFreshLimeSalted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdPepsi1)
                            .addComponent(txtPepsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(225, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout MenuPanel1Layout = new javax.swing.GroupLayout(MenuPanel1);
        MenuPanel1.setLayout(MenuPanel1Layout);
        MenuPanel1Layout.setHorizontalGroup(
            MenuPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenuPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblHeader2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(203, 203, 203)
                .addGroup(MenuPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBack3)
                    .addComponent(btnBack4))
                .addGap(39, 39, 39))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
        );
        MenuPanel1Layout.setVerticalGroup(
            MenuPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(MenuPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MenuPanel1Layout.createSequentialGroup()
                        .addComponent(btnBack3)
                        .addGap(18, 18, 18)
                        .addComponent(btnBack4))
                    .addGroup(MenuPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(lblHeader2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE))
        );

        jLayeredPane1.add(MenuPanel1, "card5");

        OrderDetails.setBackground(new java.awt.Color(240, 255, 255));

        lblHeader3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblHeader3.setForeground(new java.awt.Color(0, 153, 153));
        lblHeader3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader3.setText("<ORDER xyz details>");

        btnBack5.setBackground(new java.awt.Color(255, 204, 204));
        btnBack5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack5.setForeground(new java.awt.Color(255, 0, 51));
        btnBack5.setText("BACK");
        btnBack5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack5ActionPerformed(evt);
            }
        });

        lblOrderedBy.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblOrderedBy.setForeground(new java.awt.Color(0, 51, 51));
        lblOrderedBy.setText("ORDERED BY : ");

        lblOrderedAt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblOrderedAt.setForeground(new java.awt.Color(0, 51, 51));
        lblOrderedAt.setText("ORDERED AT :");

        lblOrderedByValue.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblOrderedByValue.setForeground(new java.awt.Color(0, 153, 51));
        lblOrderedByValue.setText("<Customer Name>");

        lblOrderedAtValue.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblOrderedAtValue.setForeground(new java.awt.Color(0, 153, 51));
        lblOrderedAtValue.setText("<OrderTime>");

        tblFoodList.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblFoodList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "FOOD ITEMS"
            }
        ));
        tblFoodList.setSelectionBackground(new java.awt.Color(153, 209, 232));
        tblFoodList.setSelectionForeground(new java.awt.Color(0, 51, 51));
        jScrollPane5.setViewportView(tblFoodList);

        javax.swing.GroupLayout OrderDetailsLayout = new javax.swing.GroupLayout(OrderDetails);
        OrderDetails.setLayout(OrderDetailsLayout);
        OrderDetailsLayout.setHorizontalGroup(
            OrderDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrderDetailsLayout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(OrderDetailsLayout.createSequentialGroup()
                .addGap(218, 218, 218)
                .addGroup(OrderDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OrderDetailsLayout.createSequentialGroup()
                        .addGroup(OrderDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblOrderedBy)
                            .addComponent(lblOrderedAt))
                        .addGap(18, 18, 18)
                        .addGroup(OrderDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblOrderedAtValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblOrderedByValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(OrderDetailsLayout.createSequentialGroup()
                        .addComponent(lblHeader3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                        .addComponent(btnBack5)))
                .addGap(34, 34, 34))
        );
        OrderDetailsLayout.setVerticalGroup(
            OrderDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrderDetailsLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(OrderDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack5)
                    .addComponent(lblHeader3))
                .addGap(83, 83, 83)
                .addGroup(OrderDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOrderedBy)
                    .addComponent(lblOrderedByValue))
                .addGap(37, 37, 37)
                .addGroup(OrderDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOrderedAtValue)
                    .addComponent(lblOrderedAt))
                .addGap(102, 102, 102)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        jLayeredPane1.add(OrderDetails, "card5");

        jSplitPane1.setRightComponent(jLayeredPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditDetailsActionPerformed
        switchPanels(EditDetailsPanel);
    }//GEN-LAST:event_btnEditDetailsActionPerformed

    private void chkNonVegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkNonVegActionPerformed
        chkVeg.setSelected(false);
        chkVegan.setSelected(false);
        chkAll.setSelected(false);
    }//GEN-LAST:event_chkNonVegActionPerformed

    private void chkVeganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkVeganActionPerformed
        chkVeg.setSelected(false);
        chkNonVeg.setSelected(false);
        chkAll.setSelected(false);
    }//GEN-LAST:event_chkVeganActionPerformed

    private void chkAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAllActionPerformed
        chkVeg.setSelected(false);
        chkNonVeg.setSelected(false);
        chkVegan.setSelected(false);
    }//GEN-LAST:event_chkAllActionPerformed

    private void chkVegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkVegActionPerformed
        chkNonVeg.setSelected(false);
        chkVegan.setSelected(false);
        chkAll.setSelected(false);
    }//GEN-LAST:event_chkVegActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        restaurant.setName(txtName.getText());
        restaurant.setAddress(txtAddress.getText());
        restaurant.setCuisine(txtCuisine.getText());
        restaurant.setPhoneNumber(txtPhoneNum.getText());
        restaurant.setEmailId(txtEmailId.getText());

        if (chkVeg.isSelected()) {
            restaurant.setVegOrNonVeg("VEG");
        } else if (chkNonVeg.isSelected()) {
            restaurant.setVegOrNonVeg("NON-VEG");
        } else if (chkVegan.isSelected()) {
            restaurant.setVegOrNonVeg("VEGAN");
        } else {
            restaurant.setVegOrNonVeg("ALL");
        }

        JOptionPane.showMessageDialog(null, "Restaurant Details saved successfully.");
        txtName.setText("");
        txtAddress.setText("");
        txtCuisine.setText("");
        chkVeg.setSelected(false);
        chkNonVeg.setSelected(false);
        chkVegan.setSelected(false);
        chkAll.setSelected(false);
        switchPanels(workAreaPanel);

        for (int i = 0; i <= restaurantDirectory.getRestaurants().size() - 1; i++) {
            if (restaurantDirectory.getRestaurants().get(i).getManagerName().equals(managerName)) {
                restaurantDirectory.getRestaurants().set(i, restaurant);
            }
        }

        lblRestaurantName.setText(restaurant.getName());
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        switchPanels(workAreaPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        switchPanels(MenuPanel1);
        populateMenuFields();
    }//GEN-LAST:event_btnMenuActionPerformed

    private void btnBack3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack3ActionPerformed
        switchPanels(workAreaPanel);
    }//GEN-LAST:event_btnBack3ActionPerformed

    private void btnBack4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack4ActionPerformed
        HashMap<String, Integer> apetizers = setApetizers();
        HashMap<String, Integer> mains = setMains();
        HashMap<String, Integer> desserts = setDessert();
        HashMap<String, Integer> beverages = setBeverages();

        Menu menu = new Menu();
        menu.setApetizers(apetizers);
        menu.setMains(mains);
        menu.setDessert(desserts);
        menu.setBeverages(beverages);
        restaurant.setMenu(menu);
        JOptionPane.showMessageDialog(null, "Menu saved successfully.");
        switchPanels(workAreaPanel);
    }//GEN-LAST:event_btnBack4ActionPerformed

    private void txtTofuSaladActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTofuSaladActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTofuSaladActionPerformed

    private void rdOnionRings1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdOnionRings1ActionPerformed

    }//GEN-LAST:event_rdOnionRings1ActionPerformed

    private void rdCheeseBurger1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdCheeseBurger1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdCheeseBurger1ActionPerformed

    private void btnAcceptOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptOrderActionPerformed
        int selectedRowIndex = tblOrders.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select an Order");
            return;
        } else {
            DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
            Order selectedOrder = (Order) model.getValueAt(selectedRowIndex, 0);
            Order updatedOrder = orderDirectory.findOrder(selectedOrder.getId());
            updatedOrder.setStatus("ACCEPTED");
            orderId = selectedOrder.getId();

            for (int i = 0; i <= orderDirectory.getOrders().size() - 1; i++) {
                if (orderDirectory.getOrders().get(i).getId() == selectedOrder.getId()) {
                    orderDirectory.getOrders().set(i, updatedOrder);
                }
            }
            populateOrders();
        }
    }//GEN-LAST:event_btnAcceptOrderActionPerformed

    private void btnrejectOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrejectOrderActionPerformed
        int selectedRowIndex = tblOrders.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select an Order");
            return;
        } else {
            DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
            Order selectedOrder = (Order) model.getValueAt(selectedRowIndex, 0);
            Order updatedOrder = orderDirectory.findOrder(selectedOrder.getId());
            updatedOrder.setStatus("REJECTED");

            for (int i = 0; i <= orderDirectory.getOrders().size() - 1; i++) {
                if (orderDirectory.getOrders().get(i).getId() == selectedOrder.getId()) {
                    orderDirectory.getOrders().set(i, updatedOrder);
                }
            }
            populateOrders();
        }
    }//GEN-LAST:event_btnrejectOrderActionPerformed

    private void btnFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFeedbackActionPerformed
        int selectedRowIndex = tblOrders.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select an Order");
            return;
        } else {
            btnClose.setVisible(true);
            pnlFeedbackTable.setVisible(true);
            DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
            Order selectedOrder = (Order) model.getValueAt(selectedRowIndex, 0);
            populateFeedbackTable(String.valueOf(selectedOrder.getId()));
        }
    }//GEN-LAST:event_btnFeedbackActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        btnClose.setVisible(false);
        pnlFeedbackTable.setVisible(false);

    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailsActionPerformed
        int selectedRowIndex = tblOrders.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select an Order");
            return;
        } else {
            switchPanels(OrderDetails);
            DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
            Order selectedOrder = (Order) model.getValueAt(selectedRowIndex, 0);
            lblHeader3.setText("Order " + selectedOrder.getId() + " details");
            lblOrderedByValue.setText(selectedOrder.getCustomerName());
            lblOrderedAtValue.setText(String.valueOf(selectedOrder.getOrderDateTime()));
            popuateFoodItemList(selectedOrder.getId());
        }
    }//GEN-LAST:event_btnDetailsActionPerformed

    private void btnBack5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack5ActionPerformed
        switchPanels(workAreaPanel);
    }//GEN-LAST:event_btnBack5ActionPerformed

    private void switchPanels(Component component) {
        jLayeredPane1.removeAll();
        jLayeredPane1.add(component);
        jLayeredPane1.revalidate();
        jLayeredPane1.repaint();
    }

    /**
     * set appetizer map
     *
     * @return
     */
    private HashMap<String, Integer> setApetizers() {
        HashMap<String, Integer> apetizers = new HashMap<>();
        if (rdOnionRings1.isSelected()) {
            apetizers.put("Onion Rings", Integer.parseInt(txtOnionRings.getText()));
        }

        if (rdSpinachPie1.isSelected()) {
            apetizers.put("Spinach Pie", Integer.parseInt(txtSpinachPie.getText()));
        }

        if (rdSpringRoles1.isSelected()) {
            apetizers.put("Spring Roles", Integer.parseInt(txtSpringRoles.getText()));
        }

        if (rdMeatBalls1.isSelected()) {
            apetizers.put("Meat Balls", Integer.parseInt(txtMeatBalls.getText()));
        }

        if (rdSausageDip1.isSelected()) {
            apetizers.put("Sausage Dip", Integer.parseInt(txtSausageDip.getText()));
        }

        if (rdFriedShrimp1.isSelected()) {
            apetizers.put("Fried Shrimp", Integer.parseInt(txtFriedShrimp.getText()));
        }

        if (rdWhiteBeanDip1.isSelected()) {
            apetizers.put("White Bean Dip", Integer.parseInt(txtWhiteBeanDip.getText()));
        }

        if (rdTortillaChips1.isSelected()) {
            apetizers.put("Tortilla Chips", Integer.parseInt(txtTortillaChips.getText()));
        }

        if (rdCrispyTofu1.isSelected()) {
            apetizers.put("Crispy Tofu", Integer.parseInt(txtCrispyTofu.getText()));
        }
        return apetizers;
    }

    /**
     * set mains map
     *
     * @return
     */
    private HashMap<String, Integer> setMains() {
        HashMap<String, Integer> mains = new HashMap<>();
        if (rdCheeseBurger1.isSelected()) {
            mains.put("CheeseBurger", Integer.parseInt(txtCheeseBurger.getText()));
        }

        if (rdFriedRice1.isSelected()) {
            mains.put("Fried Rice", Integer.parseInt(txtFriedRice.getText()));
        }

        if (rdVeggiePizza1.isSelected()) {
            mains.put("Veggie Pizza", Integer.parseInt(txtVeggiePizza.getText()));
        }

        if (rdHamBurger1.isSelected()) {
            mains.put("Ham Burger", Integer.parseInt(txtHamBurger.getText()));
        }

        if (rdFishNChips1.isSelected()) {
            mains.put("Fish N' Chips", Integer.parseInt(txtFishNChips.getText()));
        }

        if (rdPrawnFriedRice1.isSelected()) {
            mains.put("Prawn Fried Rice", Integer.parseInt(txtPrawnFriedRice.getText()));
        }

        if (rdTofuSalad1.isSelected()) {
            mains.put("Tofu Salad", Integer.parseInt(txtTofuSalad.getText()));
        }

        if (rdFalafelBowl1.isSelected()) {
            mains.put("Falafel Bowl", Integer.parseInt(txtFalafelBowl.getText()));
        }

        if (rdTofuAndRiceBowl1.isSelected()) {
            mains.put("Tofu & Rice Platter", Integer.parseInt(txtTofuAndRiceBowl.getText()));
        }
        return mains;
    }

    /**
     * sets desserts map
     *
     * @return
     */
    private HashMap<String, Integer> setDessert() {
        HashMap<String, Integer> desserts = new HashMap<>();
        if (rdBlackForestCake1.isSelected()) {
            desserts.put("Black Forest Cake", Integer.parseInt(txtBlackForestCake.getText()));
        }

        if (rdPineappleSwissRole1.isSelected()) {
            desserts.put("Pineapple Swiss Role", Integer.parseInt(txtPineappleSwissRole.getText()));
        }

        if (rdChocolateMousse1.isSelected()) {
            desserts.put("Chocolate Mousse", Integer.parseInt(txtChocolateMousse.getText()));
        }

        return desserts;
    }

    /**
     * set beverages map
     *
     * @return
     */
    private HashMap<String, Integer> setBeverages() {
        HashMap<String, Integer> beverages = new HashMap<>();
        if (rdCocaCola1.isSelected()) {
            beverages.put("CocaCola", Integer.parseInt(txtCocaCola.getText()));
        }

        if (rdFreshLimesalted1.isSelected()) {
            beverages.put("Fresh Lime Salted", Integer.parseInt(txtFreshLimeSalted.getText()));
        }

        if (rdPepsi1.isSelected()) {
            beverages.put("Pepsi", Integer.parseInt(txtPepsi.getText()));
        }

        return beverages;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel EditDetailsPanel;
    private javax.swing.JPanel MenuPanel1;
    private javax.swing.JPanel NavigationJPanel;
    private javax.swing.JPanel OrderDetails;
    private javax.swing.JButton btnAcceptOrder;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack3;
    private javax.swing.JButton btnBack4;
    private javax.swing.JButton btnBack5;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDetails;
    private javax.swing.JButton btnEditDetails;
    private javax.swing.JButton btnFeedback;
    private javax.swing.JButton btnMenu;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnrejectOrder;
    private javax.swing.JCheckBox chkAll;
    private javax.swing.JCheckBox chkNonVeg;
    private javax.swing.JCheckBox chkVeg;
    private javax.swing.JCheckBox chkVegan;
    private javax.swing.JButton jButton2;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel lbBeverages1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblApetizers1;
    private javax.swing.JLabel lblAptNonVeg1;
    private javax.swing.JLabel lblAptVeg1;
    private javax.swing.JLabel lblAptVegan1;
    private javax.swing.JLabel lblAptVegan2;
    private javax.swing.JLabel lblCuisine;
    private javax.swing.JLabel lblDesserts1;
    private javax.swing.JLabel lblEmailId;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblHeader2;
    private javax.swing.JLabel lblHeader3;
    private javax.swing.JLabel lblMains1;
    private javax.swing.JLabel lblMainsNonVeg1;
    private javax.swing.JLabel lblMainsVeg1;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNonVeg;
    private javax.swing.JLabel lblOrderedAt;
    private javax.swing.JLabel lblOrderedAtValue;
    private javax.swing.JLabel lblOrderedBy;
    private javax.swing.JLabel lblOrderedByValue;
    private javax.swing.JLabel lblPhoneNum;
    private javax.swing.JLabel lblRestaurantName;
    private javax.swing.JLabel lblVeg;
    private javax.swing.JLabel lblVegan;
    private javax.swing.JLabel lvlAll;
    private javax.swing.JPanel pnlFeedbackTable;
    private javax.swing.JRadioButton rdBlackForestCake1;
    private javax.swing.JRadioButton rdCheeseBurger1;
    private javax.swing.JRadioButton rdChocolateMousse1;
    private javax.swing.JRadioButton rdCocaCola1;
    private javax.swing.JRadioButton rdCrispyTofu1;
    private javax.swing.JRadioButton rdFalafelBowl1;
    private javax.swing.JRadioButton rdFishNChips1;
    private javax.swing.JRadioButton rdFreshLimesalted1;
    private javax.swing.JRadioButton rdFriedRice1;
    private javax.swing.JRadioButton rdFriedShrimp1;
    private javax.swing.JRadioButton rdHamBurger1;
    private javax.swing.JRadioButton rdMeatBalls1;
    private javax.swing.JRadioButton rdOnionRings1;
    private javax.swing.JRadioButton rdPepsi1;
    private javax.swing.JRadioButton rdPineappleSwissRole1;
    private javax.swing.JRadioButton rdPrawnFriedRice1;
    private javax.swing.JRadioButton rdSausageDip1;
    private javax.swing.JRadioButton rdSpinachPie1;
    private javax.swing.JRadioButton rdSpringRoles1;
    private javax.swing.JRadioButton rdTofuAndRiceBowl1;
    private javax.swing.JRadioButton rdTofuSalad1;
    private javax.swing.JRadioButton rdTortillaChips1;
    private javax.swing.JRadioButton rdVeggiePizza1;
    private javax.swing.JRadioButton rdWhiteBeanDip1;
    private javax.swing.JTable tblFeedBack;
    private javax.swing.JTable tblFoodList;
    private javax.swing.JTable tblOrders;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtBlackForestCake;
    private javax.swing.JTextField txtCheeseBurger;
    private javax.swing.JTextField txtChocolateMousse;
    private javax.swing.JTextField txtCocaCola;
    private javax.swing.JTextField txtCrispyTofu;
    private javax.swing.JTextField txtCuisine;
    private javax.swing.JTextField txtEmailId;
    private javax.swing.JTextField txtFalafelBowl;
    private javax.swing.JTextField txtFishNChips;
    private javax.swing.JTextField txtFreshLimeSalted;
    private javax.swing.JTextField txtFriedRice;
    private javax.swing.JTextField txtFriedShrimp;
    private javax.swing.JTextField txtHamBurger;
    private javax.swing.JTextField txtMeatBalls;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtOnionRings;
    private javax.swing.JTextField txtPepsi;
    private javax.swing.JTextField txtPhoneNum;
    private javax.swing.JTextField txtPineappleSwissRole;
    private javax.swing.JTextField txtPrawnFriedRice;
    private javax.swing.JTextField txtSausageDip;
    private javax.swing.JTextField txtSpinachPie;
    private javax.swing.JTextField txtSpringRoles;
    private javax.swing.JTextField txtTofuAndRiceBowl;
    private javax.swing.JTextField txtTofuSalad;
    private javax.swing.JTextField txtTortillaChips;
    private javax.swing.JTextField txtVeggiePizza;
    private javax.swing.JTextField txtWhiteBeanDip;
    private javax.swing.JPanel workAreaPanel;
    // End of variables declaration//GEN-END:variables

    /**
     * @param appetizerMap1
     */
    private void populateAppetizerFields(HashMap<String, Integer> appetizerMap1) {
        for (Map.Entry<String, Integer> appetizerMap : appetizerMap1.entrySet()) {
            if (appetizerMap.getKey().equals("Onion Rings")) {
                rdOnionRings1.setSelected(true);
                txtOnionRings.setText(String.valueOf(appetizerMap.getValue()));
            }

            if (appetizerMap.getKey().equals("Spinach Pie")) {
                rdSpinachPie1.setSelected(true);
                txtSpinachPie.setText(String.valueOf(appetizerMap.getValue()));
            }

            if (appetizerMap.getKey().equals("Spring Roles")) {
                rdSpringRoles1.setSelected(true);
                txtSpringRoles.setText(String.valueOf(appetizerMap.getValue()));
            }

            if (appetizerMap.getKey().equals("Meat Balls")) {
                rdMeatBalls1.setSelected(true);
                txtMeatBalls.setText(String.valueOf(appetizerMap.getValue()));
            }

            if (appetizerMap.getKey().equals("Sausage Dip")) {
                rdSausageDip1.setSelected(true);
                txtSausageDip.setText(String.valueOf(appetizerMap.getValue()));
            }

            if (appetizerMap.getKey().equals("Fried Shrimp")) {
                rdFriedShrimp1.setSelected(true);
                txtFriedShrimp.setText(String.valueOf(appetizerMap.getValue()));
            }

            if (appetizerMap.getKey().equals("White Bean Dip")) {
                rdWhiteBeanDip1.setSelected(true);
                txtWhiteBeanDip.setText(String.valueOf(appetizerMap.getValue()));
            }

            if (appetizerMap.getKey().equals("Tortilla Chips")) {
                rdTortillaChips1.setSelected(true);
                txtTortillaChips.setText(String.valueOf(appetizerMap.getValue()));
            }

            if (appetizerMap.getKey().equals("Crispy Tofu")) {
                rdCrispyTofu1.setSelected(true);
                txtCrispyTofu.setText(String.valueOf(appetizerMap.getValue()));
            }
        }
    }

    /**
     * @param mainsMap1
     */
    private void populateMainsFields(HashMap<String, Integer> mainsMap1) {
        for (Map.Entry<String, Integer> mainsMap : mainsMap1.entrySet()) {
            if (mainsMap.getKey().equals("Cheese Burger")) {
                rdCheeseBurger1.setSelected(true);
                txtCheeseBurger.setText(String.valueOf(mainsMap.getValue()));
            }

            if (mainsMap.getKey().equals("Fried Rice")) {
                rdFriedRice1.setSelected(true);
                txtFriedRice.setText(String.valueOf(mainsMap.getValue()));
            }

            if (mainsMap.getKey().equals("Veggie Pizza")) {
                rdVeggiePizza1.setSelected(true);
                txtVeggiePizza.setText(String.valueOf(mainsMap.getValue()));
            }

            if (mainsMap.getKey().equals("Ham Burger")) {
                rdHamBurger1.setSelected(true);
                txtHamBurger.setText(String.valueOf(mainsMap.getValue()));
            }

            if (mainsMap.getKey().equals("Fish N' Chips")) {
                rdFishNChips1.setSelected(true);
                txtFishNChips.setText(String.valueOf(mainsMap.getValue()));
            }

            if (mainsMap.getKey().equals("Prawn Fried Rice")) {
                rdPrawnFriedRice1.setSelected(true);
                txtPrawnFriedRice.setText(String.valueOf(mainsMap.getValue()));
            }

            if (mainsMap.getKey().equals("Tofu Salad")) {
                rdTofuSalad1.setSelected(true);
                txtTofuSalad.setText(String.valueOf(mainsMap.getValue()));
            }

            if (mainsMap.getKey().equals("Falafel Bowl")) {
                rdFalafelBowl1.setSelected(true);
                txtFalafelBowl.setText(String.valueOf(mainsMap.getValue()));
            }

            if (mainsMap.getKey().equals("Tofu & Rice Platter")) {
                rdTofuAndRiceBowl1.setSelected(true);
                txtTofuAndRiceBowl.setText(String.valueOf(mainsMap.getValue()));
            }
        }
    }

    /**
     * @param dessertsMap1
     */
    private void populateDessertsFields(HashMap<String, Integer> dessertsMap1) {
        for (Map.Entry<String, Integer> dessertsMap : dessertsMap1.entrySet()) {
            if (dessertsMap.getKey().equals("Black Forest Cake")) {
                rdBlackForestCake1.setSelected(true);
                txtBlackForestCake.setText(String.valueOf(dessertsMap.getValue()));
            }

            if (dessertsMap.getKey().equals("Pineapple Swiss Role")) {
                rdPineappleSwissRole1.setSelected(true);
                txtPineappleSwissRole.setText(String.valueOf(dessertsMap.getValue()));
            }

            if (dessertsMap.getKey().equals("Chocolate Mousse")) {
                rdChocolateMousse1.setSelected(true);
                txtChocolateMousse.setText(String.valueOf(dessertsMap.getValue()));
            }
        }
    }

    /**
     * @param beveragesMap1
     */
    private void populateBeveragesFields(HashMap<String, Integer> beveragesMap1) {
        for (Map.Entry<String, Integer> beveragesMap : beveragesMap1.entrySet()) {
            if (beveragesMap.getKey().equals("CocaCola")) {
                rdCocaCola1.setSelected(true);
                txtCocaCola.setText(String.valueOf(beveragesMap.getValue()));
            }

            if (beveragesMap.getKey().equals("Fresh Lime Salted")) {
                rdFreshLimesalted1.setSelected(true);
                txtFreshLimeSalted.setText(String.valueOf(beveragesMap.getValue()));
            }

            if (beveragesMap.getKey().equals("Pepsi")) {
                rdPepsi1.setSelected(true);
                txtPepsi.setText(String.valueOf(beveragesMap.getValue()));
            }
        }
    }

    /**
     * Populate the menu fields
     */
    private void populateMenuFields() {
        if (restaurant.getMenu() != null) {
            if (restaurant.getMenu().getApetizers() != null && !restaurant.getMenu().getApetizers().isEmpty()) {
                populateAppetizerFields(restaurant.getMenu().getApetizers());
            }

            if (restaurant.getMenu().getMains() != null && !restaurant.getMenu().getMains().isEmpty()) {
                populateMainsFields(restaurant.getMenu().getMains());
            }

            if (restaurant.getMenu().getDessert() != null && !restaurant.getMenu().getDessert().isEmpty()) {
                populateDessertsFields(restaurant.getMenu().getDessert());
            }

            if (restaurant.getMenu().getBeverages() != null && !restaurant.getMenu().getBeverages().isEmpty()) {
                populateBeveragesFields(restaurant.getMenu().getBeverages());
            }
        }
    }

    private void populateOrders() {
        DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
        model.setRowCount(0);

        for (Order order : orderDirectory.getOrders()) {
            if (order.getRestaurantName().equals(restaurant.getName())) {
                Object[] row = new Object[5];
                row[0] = order;
                row[1] = order.getCustomerName();
                row[2] = order.getCost() + "$";
                row[3] = order.getOrderDateTime();
                row[4] = order.getStatus();
                model.addRow(row);
            }
        }
    }

    private void populateFeedbackTable(String id) {
        DefaultTableModel model = (DefaultTableModel) tblFeedBack.getModel();
        model.setRowCount(0);

        for (Order order : orderDirectory.getOrders()) {
            Object[] row = new Object[2];
            if (order.getReviewComments() != null && !order.getReviewComments().isEmpty()) {
                for (Map.Entry<String, String> feedbackMap : order.getReviewComments().entrySet()) {
                    if (id.equals(feedbackMap.getKey())) {
                        row[0] = feedbackMap.getKey();
                        row[1] = feedbackMap.getValue();
                        model.addRow(row);
                    }
                }
            }
        }
    }

    private void popuateFoodItemList(int id) {
        DefaultTableModel model = (DefaultTableModel) tblFoodList.getModel();
        model.setRowCount(0);

        for (Order order : orderDirectory.getOrders()) {
            Object[] row = new Object[1];
            if (order.getFoodItems() != null && !order.getFoodItems().isEmpty()) {
                for ( String foodItems : order.getFoodItems() ) {
                    if (id == order.getId()) {
                        row[0] = foodItems.toString();
                        model.addRow(row);
                    }
                }
            }
        }
    }

}
